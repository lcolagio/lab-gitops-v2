apiVersion: argoproj.io/v1alpha1
kind: ArgoCD
metadata:
  finalizers:
    - argoproj.io/finalizer
  generation: 3
  name: ops-argocd
  namespace: argocd
spec:
  applicationSet:
    resources:
      limits:
        cpu: '2'
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi
  controller:
    processors: {}
    resources:
      limits:
        cpu: '2'
        memory: 3Gi
      requests:
        cpu: 250m
        memory: 1Gi
    sharding: {}
  grafana:
    enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
    route:
      enabled: false
  ha:
    enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  initialSSHKnownHosts: {}
  nodePlacement:
    nodeSelector:
      node-role.kubernetes.io/ingress: ''
    tolerations:
      - effect: NoSchedule
        key: ingress
        value: reserved
      - effect: NoExecute
        key: ingress
        value: reserved
  prometheus:
    enabled: false
    ingress:
      enabled: false
    route:
      enabled: false
  rbac:
    policy: 'g, ADMIN, role:admin

      g, ITAAS, role:readonly

      '
    scopes: '[groups]'
  redis:
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  repo:
    resources:
      limits:
        cpu: '1'
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 256Mi
  resourceCustomizations: "bitnami.com/SealedSecret:\n  health.lua: |\n    hs = {}\n\
    \    hs.status = \"Healthy\"\n    hs.message = \"Controller doesn't report resource\
    \ status\"\n    return hs      \n"
  resourceExclusions: "- apiGroups:\n  - tekton.dev\n  clusters:\n  - '*'\n  kinds:\n\
    \  - TaskRun\n  - PipelineRun\n"
  server:
    autoscale:
      enabled: false
    grpc:
      ingress:
        enabled: false
    host: ops-argocd.paas-03.test.net.intra.xxxx.fr
    ingress:
      enabled: false
    insecure: true
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 125m
        memory: 128Mi
    route:
      enabled: true
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
    service:
      type: ''
  sso:
    dex:
      openShiftOAuth: true
      resources:
        limits:
          cpu: 500m
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 128Mi
    provider: dex
  tls:
    ca: {}
