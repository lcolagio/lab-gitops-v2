apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 89
  labels:
    app.kubernetes.io/component: repo-server
    app.kubernetes.io/managed-by: ops-argocd
    app.kubernetes.io/name: ops-argocd-repo-server
    app.kubernetes.io/part-of: argocd
  name: ops-argocd-repo-server
  namespace: argocd
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: ops-argocd-repo-server
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: ops-argocd-repo-server
        image.upgraded: 10072022-144322-UTC
    spec:
      automountServiceAccountToken: false
      containers:
        - command:
            - uid_entrypoint.sh
            - argocd-repo-server
            - --redis
            - ops-argocd-redis.argocd.svc.cluster.local:6379
            - --loglevel
            - info
            - --logformat
            - text
          env:
            - name: HTTPS_PROXY
              value: http://xx:xx!@proxy-internet.xxxx.extra.xxxx.fr:8080
            - name: HTTP_PROXY
              value: http://xx:xxx!@proxy-internet.xxxx.extra.xxxx.fr:8080
            - name: NO_PROXY
              value: .cluster.local,.svc,10.0.0.0/16,10.1.0.0/16,10.152.4.0/22,10.152.8.0/22,127.0.0.1,172.30.0.0/16,api-int.paas-03.test.net.intra.xxxx.fr,localhost,xxxx.extra.xxxx.fr,net.intra.xxxx.fr,paas-03.test.net.intra.xxxx.fr
          image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:a74aebc3c3aa4ba3e231891e14611a9894a73548c54649f01ca8a0698f6122c7
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8081
            timeoutSeconds: 1
          name: argocd-repo-server
          ports:
            - containerPort: 8081
              name: server
              protocol: TCP
            - containerPort: 8084
              name: metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8081
            timeoutSeconds: 1
          resources:
            limits:
              cpu: '1'
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /app/config/ssh
              name: ssh-known-hosts
            - mountPath: /app/config/tls
              name: tls-certs
            - mountPath: /app/config/gpg/source
              name: gpg-keys
            - mountPath: /app/config/gpg/keys
              name: gpg-keyring
            - mountPath: /tmp
              name: tmp
            - mountPath: /app/config/reposerver/tls
              name: argocd-repo-server-tls
            - mountPath: /app/config/reposerver/tls/redis
              name: argocd-operator-redis-tls
            - mountPath: /home/argocd/cmp-server/plugins
              name: plugins
        - command:
            - /var/run/argocd/argocd-cmp-server
          env:
            - name: VAULT_ADDR
              value: http://hvault:8200
            - name: VAULT_TOKEN
              value: hvs.CAESIOhlateNSUw1O_q1swDnHTvIpu-DmXXs2GLPEKVcqXZDGh4KHGh2cy5CRFVEQmpDcHlnSmJORERwM2U2SnI4VEw
            - name: AVP_KV_VERSION
              value: '1'
            - name: AVP_AUTH_TYPE
              value: token
            - name: AVP_TYPE
              value: vault
          image: paas.docker.xxxx.extra.xxxx.fr/ubi8
          imagePullPolicy: Always
          name: avp
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/run/argocd
              name: var-files
            - mountPath: /home/argocd/cmp-server/plugins
              name: plugins
            - mountPath: /tmp
              name: tmp
            - mountPath: /home/argocd/cmp-server/config/plugin.yaml
              name: cmp-plugin
              subPath: avp.yaml
            - mountPath: /usr/local/bin
              name: custom-tools
        - command:
            - /var/run/argocd/argocd-cmp-server
          env:
            - name: HOME
              value: /tmp
            - name: VAULT_ADDR
              value: http://hvault:8200
            - name: VAULT_TOKEN
              value: hvs.CAESIOhlateNSUw1O_q1swDnHTvIpu-DmXXs2GLPEKVcqXZDGh4KHGh2cy5CRFVEQmpDcHlnSmJORERwM2U2SnI4VEw
            - name: AVP_KV_VERSION
              value: '1'
            - name: AVP_AUTH_TYPE
              value: token
            - name: AVP_TYPE
              value: vault
          image: paas.docker.xxxx.extra.xxxx.fr/ubi8
          imagePullPolicy: Always
          name: avp-helm
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/run/argocd
              name: var-files
            - mountPath: /home/argocd/cmp-server/plugins
              name: plugins
            - mountPath: /tmp
              name: tmp
            - mountPath: /home/argocd/cmp-server/config/plugin.yaml
              name: cmp-plugin
              subPath: avp-helm.yaml
            - mountPath: /usr/local/bin
              name: custom-tools
        - command:
            - /var/run/argocd/argocd-cmp-server
          env:
            - name: HOME
              value: /tmp
            - name: VAULT_ADDR
              value: http://hvault:8200
            - name: VAULT_TOKEN
              value: hvs.CAESIOhlateNSUw1O_q1swDnHTvIpu-DmXXs2GLPEKVcqXZDGh4KHGh2cy5CRFVEQmpDcHlnSmJORERwM2U2SnI4VEw
            - name: AVP_KV_VERSION
              value: '1'
            - name: AVP_AUTH_TYPE
              value: token
            - name: AVP_TYPE
              value: vault
          image: paas.docker.xxxx.extra.xxxx.fr/ubi8
          imagePullPolicy: Always
          name: avp-kustomize
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/run/argocd
              name: var-files
            - mountPath: /home/argocd/cmp-server/plugins
              name: plugins
            - mountPath: /tmp
              name: tmp
            - mountPath: /home/argocd/cmp-server/config/plugin.yaml
              name: cmp-plugin
              subPath: avp-kustomize.yaml
            - mountPath: /usr/local/bin
              name: custom-tools
      dnsPolicy: ClusterFirst
      initContainers:
        - command:
            - cp
            - -n
            - /usr/local/bin/argocd
            - /var/run/argocd/argocd-cmp-server
          env:
            - name: HTTP_PROXY
              value: http://aredhat:d3Z+y6G!@proxy-internet.xxxx.extra.xxxx.fr:8080
            - name: HTTPS_PROXY
              value: http://aredhat:d3Z+y6G!@proxy-internet.xxxx.extra.xxxx.fr:8080
            - name: NO_PROXY
              value: .cluster.local,.svc,10.0.0.0/16,10.1.0.0/16,10.152.4.0/22,10.152.8.0/22,127.0.0.1,172.30.0.0/16,api-int.paas-03.test.net.intra.xxxx.fr,localhost,xxxx.extra.xxxx.fr,net.intra.xxxx.fr,paas-03.test.net.intra.xxxx.fr
          image: registry.redhat.io/openshift-gitops-1/argocd-rhel8@sha256:a74aebc3c3aa4ba3e231891e14611a9894a73548c54649f01ca8a0698f6122c7
          imagePullPolicy: Always
          name: copyutil
          resources:
            limits:
              cpu: '1'
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/run/argocd
              name: var-files
        - args:
            - curl -L https://repositories.xxxx.extra.xxxx.fr/repository/raw-paas/argocd/argocd-vault-plugin_$(AVP_VERSION)_linux_amd64
              -o /custom-tools/argocd-vault-plugin && curl -L https://repositories.xxxx.extra.xxxx.fr/repository/raw-paas/argocd/yq
              -o /custom-tools/yq && curl -L https://repositories.xxxx.extra.xxxx.fr/repository/raw-paas/argocd/helm
              -o /custom-tools/helm && curl -L https://repositories.xxxx.extra.xxxx.fr/repository/raw-paas/argocd/kustomize
              -o /custom-tools/kustomize && chmod +x /custom-tools/{argocd-vault-plugin,helm,yq,kustomize}
          command:
            - sh
            - -c
          env:
            - name: AVP_VERSION
              value: 1.13.0
          image: paas.docker.xxxx.extra.xxxx.fr/ubi8
          imagePullPolicy: Always
          name: download-tools
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /custom-tools
              name: custom-tools
      nodeSelector:
        node-role.kubernetes.io/ingress: ''
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoSchedule
          key: ingress
          value: reserved
        - effect: NoExecute
          key: ingress
          value: reserved
      volumes:
        - configMap:
            defaultMode: 420
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            defaultMode: 420
            name: argocd-tls-certs-cm
          name: tls-certs
        - configMap:
            defaultMode: 420
            name: argocd-gpg-keys-cm
          name: gpg-keys
        - emptyDir: {}
          name: gpg-keyring
        - emptyDir: {}
          name: tmp
        - name: argocd-repo-server-tls
          secret:
            defaultMode: 420
            optional: true
            secretName: argocd-repo-server-tls
        - name: argocd-operator-redis-tls
          secret:
            defaultMode: 420
            optional: true
            secretName: argocd-operator-redis-tls
        - emptyDir: {}
          name: var-files
        - emptyDir: {}
          name: plugins
        - configMap:
            defaultMode: 420
            name: cmp-plugin
          name: cmp-plugin
        - emptyDir: {}
          name: custom-tools
